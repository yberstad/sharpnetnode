{"version":3,"sources":["server-compiled.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,WAAW,QAAQ,SAAR,CAAX;;AAEJ,IAAI,YAAY,uBAAuB,QAAvB,CAAZ;;AAEJ,IAAI,aAAa,QAAQ,kBAAR,CAAb;;AAEJ,IAAI,cAAc,uBAAuB,UAAvB,CAAd;;AAEJ,IAAI,kBAAkB,QAAQ,iBAAR,CAAlB;;AAEJ,IAAI,mBAAmB,uBAAuB,eAAvB,CAAnB;;AAEJ,IAAI,WAAW,QAAQ,SAAR,CAAX;;AAEJ,IAAI,WAAW,QAAQ,SAAR,CAAX;;AAEJ,SAAS,sBAAT,CAAgC,GAAhC,EAAqC;AACjC,WAAO,OAAO,IAAI,UAAJ,GAAiB,GAAxB,GAA8B,EAAE,SAAS,GAAT,EAAhC,CAD0B;CAArC;;;;AAMA,IAAI,SAAS,SAAS,MAAT,CAAgB,EAAhB,EAAoB;;AAE7B,QAAI,WAAW,IAAI,SAAS,iBAAT,CAA2B;AAC1C,cAAM,MAAN;AACA,gBAAQ,SAAS,MAAT,GAAkB;AACtB,mBAAO;AACH,qBAAK,EAAE,MAAM,SAAS,aAAT,EAAb;AACA,uBAAO,EAAE,MAAM,SAAS,aAAT,EAAf;AACA,qBAAK,EAAE,MAAM,SAAS,aAAT,EAAb;aAHJ,CADsB;SAAlB;KAFG,CAAX,CAFyB;;AAa7B,QAAI,SAAS,IAAI,SAAS,aAAT,CAAuB;AACpC,eAAO,IAAI,SAAS,iBAAT,CAA2B;AAClC,kBAAM,OAAN;AACA,oBAAQ,SAAS,MAAT,GAAkB;AACtB,uBAAO;AACH,2BAAO;AACH,8BAAM,IAAI,SAAS,WAAT,CAAqB,QAAzB,CAAN;AACA,iCAAS,SAAS,OAAT,GAAmB;AACxB,gCAAI,OAAO,IAAI,YAAY,OAAZ,EAAX,CADoB;AAExB,iCAAK,YAAL,CAAkB,aAAlB,EAFwB;AAGxB,mCAAO,GAAG,UAAH,CAAc,OAAd,EAAuB,IAAvB,CAA4B,EAA5B,EAAgC,OAAhC,EAAP,CAHwB;yBAAnB;qBAFb;iBADJ,CADsB;aAAlB;SAFL,CAAP;KADS,CAAT,CAbyB;;AA+B7B,aAAS,MAAT,GAAkB;AACd,qBADc;;AAGd,gBAAQ,GAAR,CAAY,OAAZ,EAHc;KAAlB;;AAMA,WAAO,MAAP,CArC6B;CAApB;;AAwCb,IAAI,MAAM,CAAC,GAAG,UAAU,OAAV,CAAJ,EAAN;AACJ,IAAI,GAAJ,CAAQ,UAAU,OAAV,CAAkB,MAAlB,CAAyB,QAAzB,CAAR;;AAEA,IAAI,KAAK,SAAL;AACJ,SAAS,WAAT,CAAqB,OAArB,CAA6B,8DAA7B,EAA6F,UAAU,GAAV,EAAe,QAAf,EAAyB;AAClH,QAAI,GAAJ,EAAS,MAAM,GAAN,CAAT;;AAEA,SAAK,QAAL,CAHkH;AAIlH,QAAI,GAAJ,CAAQ,UAAR,EAAoB,CAAC,GAAG,iBAAiB,OAAjB,CAAJ,CAA8B;AAC9C,gBAAQ,OAAO,EAAP,CAAR;AACA,kBAAU,IAAV;KAFgB,CAApB,EAJkH;AAQlH,QAAI,MAAJ,CAAW,IAAX,EAAiB,YAAY;AACzB,eAAO,QAAQ,GAAR,CAAY,2BAAZ,CAAP,CADyB;KAAZ,CAAjB,CARkH;CAAzB,CAA7F;;AAaA,IAAI,IAAJ,EAAU;AACN,YAAQ,GAAR,CAAY,OAAZ,EADM;AAEN,QAAI,OAAO,IAAI,YAAY,OAAZ,EAAX,CAFE;AAGN,SAAK,YAAL,CAAkB,aAAlB,EAHM;CAAV","file":"server-compiled-compiled.js","sourcesContent":["'use strict';\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _testdebug = require('./data/testdebug');\n\nvar _testdebug2 = _interopRequireDefault(_testdebug);\n\nvar _expressGraphql = require('express-graphql');\n\nvar _expressGraphql2 = _interopRequireDefault(_expressGraphql);\n\nvar _mongodb = require('mongodb');\n\nvar _graphql = require('graphql');\n\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\n\n//import schema from './data/schema';\n\nvar Schema = function Schema(db) {\n\n    var linkType = new _graphql.GraphQLObjectType({\n        name: 'Link',\n        fields: function fields() {\n            return {\n                _id: { type: _graphql.GraphQLString },\n                title: { type: _graphql.GraphQLString },\n                url: { type: _graphql.GraphQLString }\n            };\n        }\n    });\n\n    var schema = new _graphql.GraphQLSchema({\n        query: new _graphql.GraphQLObjectType({\n            name: 'Query',\n            fields: function fields() {\n                return {\n                    links: {\n                        type: new _graphql.GraphQLList(linkType),\n                        resolve: function resolve() {\n                            var inst = new _testdebug2.default();\n                            inst.logFuncition('messagetext');\n                            return db.collection(\"links\").find({}).toArray();\n                        }\n                    }\n                };\n            }\n        })\n    });\n\n    function logger() {\n        \"use strict\";\n\n        console.log('joggu');\n    }\n\n    return schema;\n};\n\nvar app = (0, _express2.default)();\napp.use(_express2.default.static('public'));\n\nvar db = undefined;\n_mongodb.MongoClient.connect('mongodb://ohabbers:dykk12@ds042898.mongolab.com:42898/dbgira', function (err, database) {\n    if (err) throw err;\n\n    db = database;\n    app.use('/graphql', (0, _expressGraphql2.default)({\n        schema: Schema(db),\n        graphiql: true\n    }));\n    app.listen(3000, function () {\n        return console.log('Listening on port 3000   ');\n    });\n});\n\nif (true) {\n    console.log('jaggu');\n    var inst = new _testdebug2.default();\n    inst.logFuncition('messagetext');\n}\n\n//# sourceMappingURL=server-compiled.js.map\n//# sourceMappingURL=server-compiled.js.map\n"]}